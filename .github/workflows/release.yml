name: Release

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linter
        run: pnpm run lint

      - name: Run type check
        run: pnpm run typecheck

      - name: Build package
        run: pnpm run build
        
      - name: Check for changesets and publish
        run: |
          # Check if there are any changeset files
          if [ -n "$(find .changeset -name '*.md' -not -name 'README.md' -print -quit)" ]; then
            echo "ðŸ“¦ Found changesets, processing release..."
            
            # Configure git for commits
            git config --global user.email "action@github.com"
            git config --global user.name "GitHub Action"
            
            # Update versions and commit changes
            pnpm run version
            
            # Check if there are changes to commit
            if [ -n "$(git status --porcelain)" ]; then
              echo "ðŸ’¾ Committing version changes..."
              git add .
              git commit -m "chore: release package [skip ci]"
              git push
            fi
            
            # Now publish the updated version
            pnpm run release
          else
            echo "âœ… No changesets found, skipping release"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
